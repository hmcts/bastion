steps:

- task: DownloadSecureFile@1
  displayName: 'Download secure file'
  inputs:
    secureFile: $(pubkeysecfile)

- task: CopyFiles@2
  displayName: 'Copy secure files'
  inputs:
    sourceFolder: $(Agent.TempDirectory)
    targetFolder: $(System.DefaultWorkingDirectory)

- task: petergroenewegen.PeterGroenewegen-Xpirit-Vsts-Release-Terraform.Xpirit-Vsts-Release-Terraform.Terraform@2
  displayName: 'Terraform init'
  inputs:
    TemplatePath: '$(System.DefaultWorkingDirectory)'
    Arguments: init
    InstallTerraform: true
    UseAzureSub: true
    ConnectedServiceNameARM: $(service_connection)
    ManageState: true
    SpecifyStorageAccount: true
    StorageAccountResourceGroup: '$(bastion_rg)'
    StorageAccountRM: '$(bastion_sa)'
    StorageContainerName: '$(bastion_name)'

- task: petergroenewegen.PeterGroenewegen-Xpirit-Vsts-Release-Terraform.Xpirit-Vsts-Release-Terraform.Terraform@2
  displayName: 'Terraform plan'
  inputs:
    TemplatePath: '$(System.DefaultWorkingDirectory)'
    Arguments: 'plan -out=$(System.DefaultWorkingDirectory)\tfplan -var ssh_key=$(System.DefaultWorkingDirectory)\$(pubkeysecfile) -var private_key=$(System.DefaultWorkingDirectory)\$(privkeysecfile)'
    InstallTerraform: true
    UseAzureSub: true
    ConnectedServiceNameARM: $(service_connection)
    ManageState: true
    SpecifyStorageAccount: true
    StorageAccountResourceGroup: $(bastion_rg)
    StorageAccountRM: $(bastion_sa)
    StorageContainerName: $(bastion_name)

- task: petergroenewegen.PeterGroenewegen-Xpirit-Vsts-Release-Terraform.Xpirit-Vsts-Release-Terraform.Terraform@2
  displayName: 'Terraform apply'
  inputs:
    TemplatePath: '$(System.DefaultWorkingDirectory)'
    Arguments: apply
    PlanPath: '$(System.DefaultWorkingDirectory)\tfplan'
    InstallTerraform: true
    UseAzureSub: true
    ConnectedServiceNameARM: $(service_connection)

- task: raul-arrieta.terraform-outputs.terraform-outputs.terraform-outputs@0
  displayName: 'Terraform Outputs'
  inputs:
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    pathToTerraform: 'C:\terraform-download'

- powershell: |
     $loc = '$(System.DefaultWorkingDirectory)'

     set-location $loc
     & C:\terraform-download\terraform.exe output bastion_priv_ip >"priv_ip"
     $priv_ip = Get-content "priv_ip"

     & C:\terraform-download\terraform.exe output bastion_pub_ip >"pub_ip"
     $pub_ip = Get-content "pub_ip"

     & C:\terraform-download\terraform.exe output bastion_hostname >"bastion_hostname"
     $bastion_hostname = Get-content "bastion_hostname"

     Write-Host ("##vso[task.setvariable variable=bastion_priv_ip;isOutput=true]$priv_ip")
     Write-Host ("##vso[task.setvariable variable=bastion_pub_ip;isOutput=true]$pub_ip")
     Write-Host ("##vso[task.setvariable variable=bastion_hostname;isOutput=true]$bastion_hostname")
  name: Variable_Outputs
