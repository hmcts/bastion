parameters:
  - name: terraformVersion
    type: string

  - name: serviceConnection
    type: string

  - name: serviceConnection_privileged
    type: string

  - name: rg
    type: string

  - name: location
    type: string

  - name: storage_account
    type: string

  - name: bastionHost
    type: string

  - name: environment
    type: string

  - name: deploy
    type: boolean

steps:

- task: TerraformInstaller@0
  displayName: Terraform install RBAC
  inputs:
    terraformVersion: ${{ parameters.terraformVersion }}

- task: TerraformCLI@0
  displayName: Terraform initialize RBAC
  inputs:
    command: init
    workingDirectory: $(System.DefaultWorkingDirectory)/terraform/environment/${{ parameters.environment }}/rbac
    backendType: azurerm
    ensurebackend: true
    backendServiceArm: ${{ parameters.serviceConnection }}
    backendAzureRmResourceGroupName: ${{ parameters.rg }}
    backendAzureRmResourceGroupLocation: ${{ parameters.location }}
    backendAzureRmStorageAccountName: ${{ parameters.storage_account }}
    backendAzureRmStorageAccountSku: Standard_LRS
    backendAzureRmContainerName: tfstate
    backendAzureRmKey: rdo-bastion/bastion-${{ parameters.environment }}-rbac.tfstate

- ${{ if eq(parameters.deploy, false) }}:

  - task: TerraformCLI@0
    displayName: Terraform validate RBAC
    inputs:
      command: validate
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform/environment/${{ parameters.environment }}/rbac

  - task: TerraformCLI@0
    displayName: Terraform plan RBAC
    inputs:
      command: plan
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform/environment/${{ parameters.environment }}/rbac
      environmentServiceName: ${{ parameters.serviceConnection_privileged }}
      commandOptions: "-out=tfplan.tf"

- ${{ if eq(parameters.deploy, true) }}:

  - task: TerraformCLI@0
    displayName: Terraform apply RBAC
    inputs:
      command: apply
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform/environment/${{ parameters.environment }}/rbac
      environmentServiceName: ${{ parameters.serviceConnection_privileged }}
      commandOptions: --auto-approve