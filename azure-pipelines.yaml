parameters:
  - name: bastions
    default: 
      - component: sbox
        tfstate_serviceConnection: dcd-cft-sandbox
        tfstate_rg: dcd-cft-sandbox-tfstate
        tfstate_location: uksouth
        tfstate_storage_account: tfstate531ff96dc0b42082
        deployment_serviceConnection: dcd-cft-sandbox

      - component: sbox2
        tfstate_serviceConnection: dcd-cft-sandbox
        tfstate_rg: dcd-cft-sandbox-tfstate
        tfstate_location: uksouth
        tfstate_storage_account: tfstate531ff96dc0b42082
        deployment_serviceConnection: dcd-cft-sandbox

trigger:
- master
- iaas-only

pr:
  branches:
    include:
      - master

variables:
  terraformVersion: 0.12.25
  agentPool: ubuntu-18.04

stages:
  - ${{ each bastion in parameters.bastions }}:

    - stage: ${{ bastion.component }}

      jobs:
      - job: Test
        condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

        steps:
        - template: pipeline-templates/terraform-test.yaml
          parameters:
            agentPool: ${{ variables.agentPool }}

        - template: pipeline-templates/terraform-execute.yaml
          parameters:
            ${{ insert }}: ${{ bastion }}
            terraformVersion: ${{ variables.terraformVersion }}
            agentPool: ${{ variables.agentPool }}
            deploy: false

      - job: Deploy
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

        steps:
        - template: pipeline-templates/terraform-execute.yaml
          parameters:
            ${{ insert }}: ${{ bastion }}
            terraformVersion: ${{ variables.terraformVersion }}
            agentPool: ${{ variables.agentPool }}
            deploy: true