parameters:
  - name: deploy_rbac
    displayName: Deploy RBAC
    type: boolean
    default: false

  - name: bastionHosts
    type: object
    default: 

    # - bastionHost: sbox
    #   environment: sbox-intsvc
    #   serviceConnection: dcd-cft-sandbox
    #   serviceConnection_privileged: dcd-cft-sandbox-ops
    #   rg: dcd-cft-sandbox-tfstate
    #   location: uksouth
    #   storage_account: tfstateed302caf1c3ce90e

    - bastionHost: bastion_test
      environment: test
      serviceConnection: dts-management-test
      serviceConnection_privileged: ops-approval-gate-test-envs
      rg: dts-management-test-tfstate
      location: uksouth
      storage_account: tfstated7b54c7febbb5bde

    - bastionHost: bastion_nonprod_intsvc
      environment: nonprod-intsvc
      serviceConnection: dts-management-nonprod-intsvc
      serviceConnection_privileged: ops-approval-gate-nonprod-envs
      rg: dts-management-nonprod-intsvc-tfstate
      location: uksouth
      storage_account: tfstateb44eb47999719b6f

    # - bastionHost: bastion_prod_intsvc
    #   environment: prod-intsvc
    #   serviceConnection: dts-management-prod-intsvc
    #   serviceConnection_privileged: ops-approval-gate-prod-envs
    #   rg: dts-management-prod-intsvc-tfstate
    #   location: uksouth
    #   storage_account: tfstate2b1afc1958670244

trigger:
- master
- pipeline-development

pr:
- master

variables:
  terraformVersion: 0.12.25
  agentPool: ubuntu-18.04

stages:
  - ${{ each bastion in parameters.bastionHosts }}:

    - stage: ${{ bastion.bastionHost }}
      dependsOn: ${{ bastion.dependent_stage }}

      jobs:
      - job: Test
        condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
        pool:
          vmImage: ${{ variables.agentPool }}

        steps:
        - template: pipeline-templates/terraform-test.yaml

        - template: pipeline-templates/terraform-execute.yaml
          parameters:
            ${{ insert }}: ${{ bastion }}
            terraformVersion: ${{ variables.terraformVersion }}
            deploy: false

        - ${{ if parameters.deploy_rbac }}:
          - template: pipeline-templates/terraform-execute-rbac.yaml
            parameters:
              ${{ insert }}: ${{ bastion }}
              terraformVersion: ${{ variables.terraformVersion }}
              deploy: false 

      - job: Deploy
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        pool:
          vmImage: ${{ variables.agentPool }}

        steps:
        - template: pipeline-templates/terraform-execute.yaml
          parameters:
            ${{ insert }}: ${{ bastion }}
            terraformVersion: ${{ variables.terraformVersion }}
            deploy: true

        - ${{ if parameters.deploy_rbac }}:
          - template: pipeline-templates/terraform-execute-rbac.yaml
            parameters:
              ${{ insert }}: ${{ bastion }}
              terraformVersion: ${{ variables.terraformVersion }}
              deploy: true